import discord
from discord import app_commands
from discord.ext import commands, tasks
from discord.utils import MISSING

from asyncio import sleep
from random import sample
from re import findall
from pymongo.mongo_client import MongoClient
from time import time
from typing import Literal

from settings import MONGO_URI, GIVEAWAYS_CHANNEL_ID, GIVEAWAYS_REQUESTS_CHANNEL_ID

from utils.general import handle_errors
from utils.msg_utils import Emojis, user_from_embed
from utils.shortcuts import no_color, no_ping
from utils.time import get_secs
from utils.users_db import DB as UDBUtils

users_db = MongoClient(MONGO_URI).antbot.users
db = MongoClient(MONGO_URI).antbot.giveaways

FOUR_WEEKS = 4 * 7 * 24 * 60 * 60


class GiveawayCommand(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
		# Checking GAs from prev session
		self.check_giveaways.start()
	
	@tasks.loop(count=1, seconds=1)
	async def check_giveaways(self):
		for ga in db.find():
			await end_ga(ga["message_id"], self.bot)

	@app_commands.command(name="giveaway", description="–°–æ–∑–¥–∞—ë—Ç –ø–æ—Å—Ç –æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤ #üéâ„Éª—Ä–æ–∑—ã–≥—Ä—ã—à–∏.")
	async def ga(self, ctx, image: discord.Attachment=None):
		user_id = ctx.user.id
		if users_db.find_one({"_id": user_id}) == None:
			await UDBUtils.add_user(user_id, self.bot)
		user_doc = users_db.find_one({"_id": user_id})
		if user_doc["disapproved_ga"] <= 3 or int(time()) - user_doc["last_disapproved_ga"] > FOUR_WEEKS:
			await ctx.response.send_modal(GAInfo(self.bot, image))
		else:
			await ctx.response.send_message(f"{Emojis.cross} –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ—Ç–∫–ª–æ–Ω—ë–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è")
	
	@commands.command(name="giveaway",
		aliases=["ga", "—Ä–æ–∑—ã–≥—Ä—ã—à"],
		description="–°–æ–∑–¥–∞—ë—Ç –ø–æ—Å—Ç –æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –≤ –∫–∞–Ω–∞–ª–µ `üéâ„Éª—Ä–æ–∑—ã–≥—Ä—ã—à–∏`.",
		usage="`/giveaway [–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞] <–ø—Ä–∏–∑(—ã)> <–æ–ø–∏—Å–∞–Ω–∏–µ> <–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å> [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π (–ø–æ –¥–µ—Ñ–æ–ª—Ç—É 1)] [–¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –ø–æ –≤–∞–π—Ç–ª–∏—Å—Ç—É]`",
		help="–ü–æ—Å–ª–µ –≤–≤–µ–¥–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —É –≤–∞—Å –≤—ã–ª–µ–∑–µ—Ç –æ–∫–Ω–æ, –∫—É–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –≤–ø–∏—Å–∞—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞ (–ø—Ä–∏–∑—ã, –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π, –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –ø–æ –≤–∞–π—Ç–ª–∏—Å—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π </whitelist:1257432962081755168>). –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à –±—É–¥–µ—Ç –æ–ø—Ç—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏. –ï—Å–ª–∏ –æ–Ω–∞ –æ–¥–æ–±—Ä–∏—Ç –≤–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à, –æ–Ω –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ `üéâ„Éª—Ä–æ–∑—ã–≥—Ä—ã—à–∏`. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å, –∫—Ç–æ –ù–ï –º–æ–∂–µ—Ç —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤–∞—à–∏—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã </blacklist:1257067280643129444>.\n### –ü—Ä–∏–º–µ—Ä:\n`/giveaway` `–ö–ª—é—á –∫ Minecraft Dungeons` `–£—á—Ç–∏—Ç–µ, —á—Ç–æ –∏–≥—Ä–∞ –Ω–µ –¥–ª—è —Å–ª–∞–±—ã—Ö –ø–∫, —Ç–∞–∫ —á—Ç–æ –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –∏–≥—Ä–∞—Ç—å —Å–æ –º–Ω–æ–π –≤ —ç—Ç—É –∏–≥—Ä—É, –ù–ï —É—á–∞–≤—Å—Ç–≤—É–π—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ!` `1–¥–µ–Ω—å 5—á`")
	async def giveaway_pointer(self, ctx):
		await ctx.reply(f"{Emojis.exclamation_mark} –ò—Å–ø–æ–ª—å–∑—É–π **—Å–ª—ç—à** –∫–æ–º–∞–Ω–¥—É </giveaway:1255859084792430732>", allowed_mentions=no_ping)

class GAInfo(discord.ui.Modal):
	def __init__(self, bot, image):
		super().__init__(title="–î–µ—Ç–∞–ª–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞")
		self.custom_id="ga:details"
		self.bot = bot
		self.image = image

	prize = discord.ui.TextInput(
		label="–ü—Ä–∏–∑(—ã)",
		style=discord.TextStyle.long,
		min_length=3,
		max_length=1999
	)
	description = discord.ui.TextInput(
		label="–û–ø–∏—Å–∞–Ω–∏–µ",
		style=discord.TextStyle.long,
		min_length=5,
		max_length=1999
	)
	end_date = discord.ui.TextInput(
		label="–ó–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑...",
		placeholder="10 –º–∏–Ω—É—Ç 15 —Å–µ–∫–Ω—É–¥/2 –¥–Ω—è/15—á 18 –º–∏–Ω",
		min_length=2
	)
	winners_count = discord.ui.TextInput(
		label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π",
		default="1"
	)
	whitelist_only = discord.ui.TextInput(
		label="–î–æ—Å—Ç—É–ø –ø–æ –≤–∞–π—Ç–ª–∏—Å—Ç—É",
		placeholder="1/–î–∞/True/T/—ç—â–∫–µ—Ä–µ",
		required=False
	)

	async def on_submit(self, ctx: discord.Interaction):
		end_date_secs = get_secs(self.end_date.value)
		if end_date_secs < 60:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è.", ephemeral=True)
			return
		#
		embed = discord.Embed(color=no_color)
		embed.add_field(name=f"{Emojis.party_popper} –ü—Ä–∏–∑(—ã)", value=self.prize.value)
		embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value=self.description.value, inline=False)
		embed.add_field(name="–ö–æ–Ω–∫—É—Ä—Å –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è", value=f"<t:{int(time()) + end_date_secs}:R>", inline=False)
		embed.set_author(name=ctx.user.name, icon_url=ctx.user.display_avatar.url)
		#img
		if self.image != None:
			image_attachment = await self.image.to_file(filename=self.image.filename)
		else:
			image_attachment = MISSING
		embed.set_image(url=f"attachment://{self.image.filename}")
		#
		ga_judge_channel = await self.bot.fetch_channel(GIVEAWAYS_REQUESTS_CHANNEL_ID)
		ga_msg = await ga_judge_channel.send(embed=embed, file=image_attachment, view=JudgeGA(self.bot))
		ga_doc = {
			"_id": ga_msg.id,
			"author_id": ctx.user.id,
			"end_date": end_date_secs,
			"winners_count": max(1, int(self.winners_count.value)),
			"participants": [],
			"blacklist": []
		}
		if bool(self.whitelist_only.value):
			ga_doc.update({"whitelist": []})
		db.insert_one(ga_doc)
		await ctx.response.send_message(f"{Emojis.check} –†–æ–∑—ã–≥—Ä—ã—à –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", ephemeral=True)

	
class JudgeGA(discord.ui.View):
	def __init__(self, bot, verdict=None):
		super().__init__(timeout=None)
		self.bot = bot
		if verdict != None:
			self.approve.disabled = True
			self.disapprove.disabled = True
			if verdict == "approved":
				self.approve.style = discord.ButtonStyle.blurple
			else:
				self.disapprove.style = discord.ButtonStyle.blurple
	
	@discord.ui.button(label="–û–¥–æ–±—Ä–∏—Ç—å", emoji=Emojis.check, custom_id="ga:approve")
	async def approve(self, ctx, button):
		ga_author = await self.bot.fetch_user(db.find_one({"_id":ctx.message.id})["author_id"])
		ga_channel = await self.bot.fetch_channel(GIVEAWAYS_CHANNEL_ID)
		posted_ga = await ga_channel.send(embed=ctx.message.embeds[0], view=TakePart())
		await posted_ga.create_thread(name=f"–†–æ–∑—ã–≥—Ä—ã—à {ga_author.name}")
		db.update_one({"_id":ctx.message.id}, {"$set": {"message_id": posted_ga.id}})
		await ctx.response.edit_message(view=JudgeGA(self.bot, "approved"))
		await ga_author.send(f"{Emojis.check} –í–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à –æ–¥–æ–±—Ä–µ–Ω {posted_ga.jump_url}")
		await end_ga(posted_ga.id, self.bot)

	@discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", emoji=Emojis.cross, custom_id="ga:disapprove")
	async def disapprove(self, ctx, button):
		user_id = db.find_one({"_id":ctx.message.id})["author_id"]
		users_db.update_one({"_id": user_id}, {"$inc": {"disapproved_ga": 1}})
		users_db.update_one({"_id": user_id}, {"$set": {"last_disapproved_ga": int(time())}})
		db.delete_one({"_id": ctx.message.id})
		await ctx.response.edit_message(view=JudgeGA(self.bot, "disapproved"))
		ga_author = await self.bot.fetch_user(user_from_embed(ctx.message))
		await ga_author.send(f"{Emojis.cross} –í–∞—à —Ä–æ–∑—ã–≥—Ä—ã—à –æ—Ç–∫–ª–æ–Ω—ë–Ω")

class TakePart(discord.ui.View):
	def __init__(self, particicpants_count="0", disable=False):
		super().__init__(timeout=None)
		self.take_part.label = particicpants_count
		if disable:
			self.take_part.disabled = True
	
	@discord.ui.button(emoji=Emojis.party_popper, custom_id="ga:take-part")
	async def take_part(self, ctx, button):
		ga = db.find_one({"message_id":ctx.message.id})
		if ctx.user.id in ga["participants"]:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ", ephemeral=True)
		elif ctx.user.id in ga["blacklist"]:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –í—ã –≤ –±–ª—ç–∫–ª–∏—Å—Ç–µ", ephemeral=True)
		elif "whitelist" in ga and ctx.user.id not in ga["whitelist"]:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –í—ã –Ω–µ –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ", ephemeral=True)
		else:
			db.update_one({"message_id": ctx.message.id}, {"$push": {"participants": ctx.user.id}})
			await ctx.message.edit(view=TakePart(str(int(self.take_part.label)+1)))
			await ctx.response.send_message(f"{Emojis.check} –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å–≤—Å—Ç–≤—É—é—â–∏—Ö", ephemeral=True)


async def end_ga(msg_id, bot):
	ga_channel = await bot.fetch_channel(GIVEAWAYS_CHANNEL_ID)
	msg = await ga_channel.fetch_message(msg_id)
	end_date = msg.embeds[0].fields[2].value[3:-3]
	await sleep(int(end_date) - int(time()))
	#
	ga = db.find_one({"message_id": msg_id})
	participants_count = len(ga["participants"])
	winners_count = ga["winners_count"] if ga["winners_count"] <= participants_count else participants_count
	winners = sample(ga["participants"], winners_count)
	if len(winners) == 1:
		edited_embed = msg.embeds[0].insert_field_at(1, name=f"{Emojis.trophy} –ü–æ–±–µ–¥–∏—Ç–µ–ª—å",
		value=f"<@{winners[0]}>")
	else:
		edited_embed = msg.embeds[0].insert_field_at(1, name=f"{Emojis.trophy} –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏",
		value="\n".join([f"{i}. <@{winners[i]}>" for i in range(len(winners))]))
	await msg.edit(embed=edited_embed, view=TakePart(participants_count, True))
	await msg.thread.send(f"# {edited_embed.fields[1].name}\n{edited_embed.fields[1].value}")
	db.delete_one({"message_id": msg_id})


class GAModerationCommands(commands.Cog):

	@commands.hybrid_command(
		aliases=["bl", "–±–ª", "—á—Å"],
		description="–û–ø–µ—Ä–∏—Ä—É–µ—Ç –±–ª—ç–∫–ª–∏—Å—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞.",
		usage="`/blacklist <add|remove> <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å(–∏)>`",
		help="–ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –≤–µ—Ç–∫—É —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –µ–≥–æ –∞–≤—Ç–æ—Ä–æ–º. –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–ª—ç–∫–ª–∏—Å—Ç –æ–Ω —Ç–∞–∫–∂–µ –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n### –ü—Ä–∏–º–µ—Ä:\n`/blacklist add <@808665387142873108>`\n`/blacklist remove <@808665387142873108> <@511049889371783180>`")
	@app_commands.describe(users="@–£–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
	async def blacklist(self, ctx, operation: Literal["add", "remove"], users: str):
		if not (isinstance(ctx.channel, discord.Thread) and ctx.channel.parent.id == GIVEAWAYS_CHANNEL_ID):
			raise Exception("AttributeError")
		user_ids = list(map(int, findall(r"(?<=<@)\d+(?=>)", users)))
		if len(user_ids) == 0:
			raise commands.UserNotFound("No users found")
		ga_filter = {"message_id": ctx.channel.id}
		ga = db.find_one(ga_filter)
		if operation == "add":
			for id in user_ids:
				db.update_one(ga_filter, {"$push": {"blacklist": id}})
				db.update_one(ga_filter, {"$pull": {"participants": id}})
			ga = db.find_one(ga_filter)
			starter_message = await ctx.channel.parent.fetch_message(ctx.channel.id)
			await starter_message.edit(view=TakePart(str(len(ga["participants"]))))
			await ctx.reply(f"{Emojis.check} {users} –î–æ–±–∞–ª–µ–Ω{'—ã' if users.count('@') > 1 else ''} –≤ –±–ª—ç–∫–ª–∏—Å—Ç", allowed_mentions=no_ping)
		elif operation == "remove":
			for id in user_ids:
				db.update_one(ga_filter, {"$pull": {"blacklist": id}})
			await ctx.reply(f"{Emojis.check} {users} –£–±—Ä–∞–Ω{'—ã' if users.count('@') > 1 else ''} —Å –±–ª—ç–∫–ª–∏—Å—Ç–∞", allowed_mentions=no_ping)
	@blacklist.error
	async def bl_error(self, ctx, error):
		await handle_errors(ctx, error, [
			{
				"exception": commands.BadLiteralArgument,
				"msg": "–ù–µ–≤–µ—Ä–Ω–∞—è —Å–∞–±–∫–æ–º–∞–Ω–¥–∞"
			},
			{
				"exception": commands.MissingRequiredArgument,
				"msg": "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
			},
			{
				"exception": commands.UserNotFound,
				"msg": "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞"
			},
			{
				"contains": "AttributeError",
				"msg": "–≠—Ç–æ –Ω–µ –≤–µ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"
			},
			{
				"contains": "NoneType",
				"msg": "–≠—Ç–æ –Ω–µ –≤–µ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"
			}
		])

	@commands.hybrid_command(
		aliases=["wl", "–≤–ª", "–±—Å"],
		description="–û–ø–µ—Ä–∏—Ä—É–µ—Ç –≤–∞–π—Ç–ª–∏—Å—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞.",
		usage="`/whitelist <add|remove> <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å(–∏)>`",
		help="–†–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ </blacklist:1257067280643129444>, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å **–≤–∞–π—Ç**–ª–∏—Å—Ç–æ–º —Ä–æ–∑—ã–≥—Ä—ã—à–∞.")
	@app_commands.describe(users="@–£–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
	async def whitelist(self, ctx, operation: Literal["add", "remove"], users: str):
		if not (isinstance(ctx.channel, discord.Thread) and ctx.channel.parent.id == GIVEAWAYS_CHANNEL_ID):
			raise Exception("AttributeError")
		user_ids = list(map(int, findall(r"(?<=<@)\d+(?=>)", users)))
		if len(user_ids) == 0:
			raise commands.UserNotFound("No users found")
		ga_filter = {"message_id": ctx.channel.id}
		ga = db.find_one(ga_filter)
		if operation == "add":
			for id in user_ids:
				db.update_one(ga_filter, {"$push": {"whitelist": id}})
			await ctx.reply(f"{Emojis.check} {users} –î–æ–±–∞–ª–µ–Ω{'—ã' if users.count('@') > 1 else ''} –≤ –≤–∞–π—Ç–ª–∏—Å—Ç", allowed_mentions=no_ping)
		elif operation == "remove":
			for id in user_ids:
				db.update_one(ga_filter, {"$pull": {"whitelist": id}})
				db.update_one(ga_filter, {"$pull": {"participants": id}})
			ga = db.find_one(ga_filter)
			starter_message = await ctx.channel.parent.fetch_message(ctx.channel.id)
			await starter_message.edit(view=TakePart(str(len(ga["participants"]))))
			await ctx.reply(f"{Emojis.check} {users} –£–±—Ä–∞–Ω{'—ã' if users.count('@') > 1 else ''} —Å –≤–∞–π—Ç–ª–∏—Å—Ç–∞", allowed_mentions=no_ping)
	@whitelist.error
	async def wl_error(self, ctx, error):
		await handle_errors(ctx, error, [
			{
				"exception": commands.BadLiteralArgument,
				"msg": f"–ù–µ–≤–µ—Ä–Ω–∞—è —Å–∞–±–∫–æ–º–∞–Ω–¥–∞"
			},
			{
				"exception": commands.MissingRequiredArgument,
				"msg": f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"
			},
			{
				"exception": commands.UserNotFound,
				"msg": "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞"
			},
			{
				"contains": "AttributeError",
				"msg": f"–≠—Ç–æ –Ω–µ –≤–µ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"
			},
			{
				"contains": "NoneType",
				"msg": f"–≠—Ç–æ –Ω–µ –≤–µ—Ç–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"
			}
		])
