import discord
from discord.ext import commands
from discord import app_commands
from discord.utils import MISSING

from pymongo.mongo_client import MongoClient
from random import randint

from settings import LOOK_FOR_CHANNEL_ID, MONGO_URI
from utils.general import handle_errors
from utils.msg_utils import Emojis
from utils.shortcuts import no_color, no_ping
from utils.validator import validate

db = MongoClient(MONGO_URI).antbot.look_for


class LookForCommand(commands.Cog):
	def __init__(self, bot):
		self.bot = bot

	@app_commands.command(name="look-for",
		description="–°–æ–∑–¥–∞—ë—Ç –ø–æ—Å—Ç –≤ üîç„Éª–ø–æ–∏—Å–∫-—Ç–∏–º—ã –æ –ø–æ–∏—Å–∫–µ —Ç–∏–º–º–µ–π—Ç–∞")
	@app_commands.describe(image="–ë–∞–Ω–Ω–µ—Ä –∫ –ø–æ—Å—Ç—É")

	async def look_for(self, ctx, image: discord.Attachment=None):
		await ctx.response.send_modal(LFInfo(self.bot, image))

	@look_for.error
	async def lf_error(self, ctx, error):
		await handle_errors(ctx, error, [])
	
	@commands.command(name="look-for",
		aliases=["lf","–ª—É–∫-—Ñ–æ—Ä","–ø–æ–∏—Å–∫-—Ç–∏–º—ã","–¥—â—â–ª-–∞—â–∫"],
		usage="`/look-for [–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞] <–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã> <–æ–ø–∏—Å–∞–Ω–∏–µ>`",
		help="–ü–æ—Å–ª–µ –≤–≤–µ–¥–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —É –≤–∞—Å –≤—ã–ª–µ–∑–µ—Ç –æ–∫–Ω–æ, –∫—É–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –≤–ø–∏—Å–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∏–≥—Ä—ã –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ. –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à –ø–æ—Å—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ `üîç„Éª–ø–æ–∏—Å–∫-—Ç–∏–º—ã`, –≥–¥–µ –ª—é–¥–∏ —Å–º–æ–≥—É—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∏–ª–∏ –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ—Ç –≤–∞—à–µ–≥–æ —Å–æ–∑—ã–≤–∞. –í –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∞ –ª—é–¥–µ–π –¥–ª—è –∏–≥—Ä—ã –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É `–ü–∏–Ω–≥–∞–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`, —á—Ç–æ–±—ã —É–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö, –∫—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è.\n###  –ü—Ä–∏–º–µ—Ä:\n`/look-for image.png\n–º–∞–π–Ω–∫—Ä–∞—Ñ—Ç\n–ò—â—É —Ç–∏–º–º–µ–π—Ç–∞ –¥–ª—è –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n–ê–π–ø–∏ —Å–µ—Ä–≤–µ—Ä–∞ play.originrealms.com, —Ç–æ–ª—å–∫–æ –ª–∏—Ü–µ–Ω–∑–∏—è`")
	async def look_for_pointer(self, ctx):
		await ctx.reply(f"{Emojis.exclamation_mark} –ò—Å–ø–æ–ª—å–∑—É–π **—Å–ª—ç—à** –∫–æ–º–∞–Ω–¥—É </look-for:1207711798732652555>", allowed_mentions=no_ping)


class LookForView(discord.ui.View):
	def __init__(self):
		super().__init__(timeout=None)
	
	async def response(ctx, action):
		embed = ctx.message.embeds[0]
		joined_users = embed.fields[1].value.split("\n")
		declined_users = embed.fields[2].value.split("\n")
		action_users_list = joined_users if action == "join" else declined_users
		opposite_users_list = declined_users if action == "join" else joined_users
		usr_ping = ctx.user.mention
		if usr_ping not in action_users_list:
			action_users_list.append(usr_ping)
		else:
			action_users_list.remove(usr_ping)
		if usr_ping in opposite_users_list:
			opposite_users_list.remove(usr_ping)
		embed.set_field_at(1, name=embed.fields[1].name, value="\n".join(joined_users))
		embed.set_field_at(2, name=embed.fields[2].name, value="\n".join(declined_users))
		await ctx.response.edit_message(embed=embed, attachments=[])
	
	@discord.ui.button(label="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", emoji=Emojis.check, custom_id="look-for:join")
	async def join(self, ctx, button):
		await LookForView.response(ctx, "join")
	
	@discord.ui.button(label="–û—Ç–∫–∞–∑–∞—Ç—å—Å—è", emoji=Emojis.cross, custom_id="look-for:decline")
	async def decline(self, ctx: discord.Interaction, button: discord.ui.Button):
		await LookForView.response(ctx, "decline")
	
	@discord.ui.button(label="–ü–∏–Ω–≥–∞–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", emoji=Emojis.users, custom_id="look-for:ping-all")
	async def ping_all(self, ctx: discord.Interaction, button: discord.ui.Button):
		joined_users = ctx.message.embeds[0].fields[1].value.replace("\n", " ")
		if ctx.user.id == db.find_one({"_id": ctx.message.id})["author_id"]:
			if "<@" in joined_users:
				await ctx.message.thread.send(f"{joined_users}, –≤–∞—Å –∑–æ–≤—ë—Ç {ctx.user.mention}!")
				await ctx.response.send_message("–£—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–∏–Ω–≥–∞–Ω—É—Ç—ã", ephemeral=True)
			else:
				await ctx.response.send_message(f"{Emojis.exclamation_mark} –ü–æ–∫–∞ –Ω–µ—Ç –∫–æ–≥–æ –ø–∏–Ω–≥–æ–≤–∞—Ç—å", ephemeral=True)
		else:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –í—ã –Ω–µ —è–≤–ª—è–µ–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º –ø–æ—Å—Ç–∞", ephemeral=True)


class LFInfo(discord.ui.Modal):
	def __init__(self, bot, image):
		super().__init__(title="–î–µ—Ç–∞–ª–∏ –ø–æ—Å—Ç–∞")
		self.custom_id="lf:details"
		self.bot = bot
		self.image = image

	game = discord.ui.TextInput(
		label="–ò–≥—Ä–∞",
		placeholder="–º–∞–π–Ω–∫—Ä–∞—Ñ—Ç",
		max_length=100
	)
	description = discord.ui.TextInput(
		label="–î–µ—Ç–∞–ª–∏",
		style=discord.TextStyle.long,
		placeholder="–ò—â—É —Ç–∏–º–º–µ–π—Ç–∞ –¥–ª—è –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n–ê–π–ø–∏ —Å–µ—Ä–≤–µ—Ä–∞ `play.originrealms.com`, —Ç–æ–ª—å–∫–æ –ª–∏—Ü–µ–Ω–∑–∏—è",
		max_length=1024
	)

	async def on_submit(self, ctx: discord.Interaction):
		embed = discord.Embed(title=f"{Emojis.spyglass} –ò—â—É —Ç–∏–º–º–µ–π—Ç–∞ –¥–ª—è {self.game.value}", color=no_color)
		if not self.image:
			banners_count = {"minecraft": 3, "terraria": 0, "gartic": 0}
			games = {
				"minecraft": ["–º–∞–π–Ω–∫—Ä–∞—Ñ—Ç", "mc", "–∫—É–±—ã", "–≥–æ–≤–Ω–æ–∫—Ä–∞—Ñ—Ç"],
				"terraria": ["—Ç–µ—Ä—Ä–∞—Ä–∏—è", "—Ç–µ—Ä–∫–∞", "—Ç–µ—Ä—Ä–∫–∞"],
				"gartic": ["–≥–∞—Ä—Ç–∏–∫", "gartic phone", "—Å–ª–æ–º–∞–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω"]
			}
			validated_game = validate(self.game.value, games)
			if validated_game == None:
				game_banner = MISSING
			else:
				game_banner = discord.File(f"assets/game_banners/{validated_game}{randint(0, banners_count[validated_game])}.png",
				filename="banner.png")
				embed.set_image(url="attachment://banner.png")
		else:
			game_banner = await self.image.to_file(filename="banner.png")
			embed.set_image(url="attachment://banner.png")
		embed.set_author(name=ctx.user.display_name, icon_url=ctx.user.display_avatar.url)
		embed.add_field(name="–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", value=self.description.value, inline=False)
		embed.add_field(name=f"{Emojis.check} –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å", value="")
		embed.add_field(name=f"{Emojis.cross} –û—Ç–∫–ª–æ–Ω–∏–ª–∏", value="")
		#
		LOOK_FOR_CHANNEL = await self.bot.fetch_channel(LOOK_FOR_CHANNEL_ID)
		lf_msg = await LOOK_FOR_CHANNEL.send(embed=embed, view=LookForView(), file=game_banner)
		db.insert_one({"_id": lf_msg.id, "author_id": ctx.user.id})
		await ctx.response.send_message(f"{Emojis.check} –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω: {lf_msg.jump_url}", ephemeral=True)
		await lf_msg.create_thread(name="–û–±—Å—É–∂–¥–µ–Ω–∏–µ")
	