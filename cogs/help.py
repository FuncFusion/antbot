import discord
from discord.ext import commands
from discord import app_commands

from settings import HELP_FORUM_ID
from utils.msg_utils import get_msg_by_id_arg

import re
import os
from typing import List

links = {
	"pinned_help": "https://discord.com/channels/914772142300749854/1021488153909018704"
}


class HelpAdditionals:
	class R_u_sure(discord.ui.View):
		def __init__(self):
			super().__init__()
		@discord.ui.button(label="–î–∞", style=discord.ButtonStyle.red)
		async def submit(self, ctx: discord.Interaction, button: discord.ui.Button):
			is_moderator = ctx.channel.permissions_for(ctx.user).manage_messages
			if ctx.user != ctx.channel.owner and not is_moderator:
				await ctx.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –ª–∏–±–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º", view=None, ephemeral=True)
			else:
				resolve_embed = discord.Embed(title="‚ùé –í–µ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞ –±–µ–∑ —Ä–µ—à–µ–Ω–∏—è", color=discord.Color.dark_embed())
				await ctx.response.edit_message(embed=resolve_embed, view=None)
				await ctx.channel.edit(locked=True)
				self.stop()
		@discord.ui.button(label="–ù–µ—Ç", style=discord.ButtonStyle.gray)
		async def cancel(self, ctx: discord.Interaction, button: discord.ui.Button):
			is_moderator = ctx.channel.permissions_for(ctx.user).manage_messages
			if ctx.user != ctx.channel.owner and not is_moderator:
				await ctx.response.send_message("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –ª–∏–±–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º", view=None, ephemeral=True)
			else:
				await ctx.message.delete()
				await ctx.response.send_message("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤ `resolve` —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–≥–æ–ª–æ \
					–≤–∞–º —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∏ @—É–ø–æ–º—è–Ω–∏—Ç–µ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ –≤–∞–º –µ—ë —Ä–µ—à–∏—Ç—å".replace("\t", ""), view=None, ephemeral=True)
				self.stop()

	class Syntax:
		syntaxes = {}
		def read_syntaxes():
			syntaxes_path = "assets\\syntaxes"
			for filename in os.listdir(syntaxes_path):
				if filename.endswith(".md"):
					with open(os.path.join(syntaxes_path, filename), "r") as file:
						HelpAdditionals.Syntax.syntaxes[filename.replace(".md", "")] = file.read()
		


HelpAdditionals.Syntax.read_syntaxes()
#


class HelpCommands(commands.Cog):
	def __init__(self, bot):

		@bot.hybrid_command(aliases=["solve", "—ã—â–¥–º—É", "–∫—É—ã—â–¥–º—É", "—Ä–µ—à–µ–Ω–æ", "—Ä–µ—Å–æ–ª–≤", "—Å–æ–ª–≤"],
							description="–ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –≤–µ—Ç–∫—É –ø–æ–º–æ—â–∏ –ø—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã") 
		@app_commands.describe(solution="–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–ª–æ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É (—Å—Å—ã–ª–∫–∞)",
							   helpers="–õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É")
		async def resolve(ctx, solution: str=None, *, helpers: str=None):
			is_moderator = ctx.channel.permissions_for(ctx.author).manage_messages
			# Error handling
			if type(ctx.channel) != discord.threads.Thread:
				await ctx.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≤–µ—Ç–∫–∞—Ö –ø–æ–º–æ—â–∏")
			elif ctx.channel.parent_id != HELP_FORUM_ID:
				await ctx.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≤–µ—Ç–∫–∞—Ö –ø–æ–º–æ—â–∏")
			elif ctx.author != ctx.channel.owner and not is_moderator:
				await ctx.send("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –ª–∏–±–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º")
			elif solution == None:
				# Building embed
				embed = discord.Embed(title="ü§® –ü–æ–≥–æ–¥–∏—Ç–µ, –≤—ã —É–≤–µ—Ä–µ–Ω—ã?", color=discord.Color.dark_embed(),
					description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∏ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É, \
					—ç—Ç–æ –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –≤–µ—Ç–∫—É –±–µ–∑ —Ä–µ—à–µ–Ω–∏—è".replace("\t", ""))
				await ctx.send(embed=embed, view=HelpAdditionals.R_u_sure())
			elif type((solution:=await get_msg_by_id_arg(ctx, bot, solution))) != discord.Message:
				await ctx.send("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞/–∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è")
			elif helpers == None:
				await ctx.send("–ü–æ–∂–∞–ª–π—Å—Ç–∞, @—É–ø–æ–º—è–Ω–∏—Ç–µ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ –≤–∞–º —Å –ø—Ä–æ–±–ª–µ–º–æ–π")
			else:
				# Setting up variables
				heleprs_ids = [int(helepr_id) for helepr_id in re.findall(r"(?<=<@)([0-9]+)(?=>)", helpers)]
				helpers_mentions = re.findall(r"<@[0-9]+>", helpers)
				# Building embed
				embed = discord.Embed(title="‚úÖ –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞", color=discord.Color.dark_embed())
				embed.add_field(name="–†–µ—à–µ–Ω–∏–µ", value=f"üîó {solution.jump_url}", inline=False)
				embed.add_field(name="–õ—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏" if len(helpers_mentions) >= 2 else "–ß–µ–ª–æ–≤–µ–∫ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥", 
					value=f"{"üë•" if len(helpers_mentions) >= 2 else "üë§"} {" ".join(helpers_mentions)}")
				await ctx.send(embed=embed)
				await ctx.channel.edit(locked=True)
		
		@bot.hybrid_command(aliases=["stx", "—ã–Ω—Ç–µ—Ñ—á", "—ã–µ—è", "—Å–∏–Ω—Ç–∞–∫—Å", "—Å–∏–Ω—Ç–∞–∫—Å–∏—Å", "—Å—Ç–∫—Å"],
					  		description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å –≤–≤–µ–¥–µ–Ω–æ–π –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∫–æ–º–∞–Ω–¥—ã")
		@app_commands.describe(command="–ö–æ–º–∞–Ω–¥–∞ —Å –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–∞")
		async def syntax(ctx, command: str=None):
			# Handling errors
			if command == None:
				await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É")
			else:
				#Bulding embed
				embed = discord.Embed(title=f"üñ• /{command}", color=discord.Color.dark_embed(), 
					description=HelpAdditionals.Syntax.syntaxes[command])
				await ctx.send(embed=embed)
		@syntax.autocomplete("command")
		async def syntax_autocomplete(ctx: discord.Interaction, curr: str) -> List[app_commands.Choice[str]]:
			if curr == "":
				commands = list(HelpAdditionals.Syntax.syntaxes)
			else:
				commands = [command for command in HelpAdditionals.Syntax.syntaxes if curr in command]
			return [app_commands.Choice(name=command, value=command) for command in commands[:25]]
		

class HelpListeners(commands.Cog):
	def __init__(self, bot):
	
		@bot.listen("on_thread_create")
		async def help_in_chat(trd):
			if trd.parent_id == HELP_FORUM_ID:
				# Building embed
				embed = discord.Embed(title="üìå –û–∑–Ω–∞–∫–æ–º—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏", color=discord.Color.dark_embed(), 
					description=f"–ï—Å–ª–∏ –µ—â—ë –Ω–µ —á–∏—Ç–∞–ª, –ø—Ä–æ—á—Ç–∏ –≤ –∑–∞–∫—Ä–µ–ø–µ ({links['pinned_help']}) —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ \
					–∫ –≤–µ—Ç–∫–∞–º –ø–æ–º–æ—â–∏, –∏ –æ —Ç–æ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –µ—ë –∞—Å–ø–µ–∫—Ç—ã. –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤—Å–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º \
					–ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –ø–æ–º–æ—â—å.".replace("\t", ""))
				#
				await trd.send(embed=embed)