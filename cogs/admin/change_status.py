import discord
from discord.ext import commands
from discord import app_commands

from typing import Literal

from utils.general import handle_errors
from utils.msg_utils import Emojis
from utils.shortcuts import no_ping
from utils.validator import validate


class StatusCommands(commands.Cog):
	def __init__(self, bot: commands.Bot):
		self.bot = bot
		
	# @commands.hybrid_command(aliases=["offline", "off", "disconnect", "–¥–∏—Å–∫–æ–Ω–Ω–µ–∫—Ç", "–æ—Ç–∫–ª—é—á–∏—Å—å", "–≤—ã–∫–ª", "–≤—ã–∫–ª—é—á–∏—Å—å", "–æ—Ñ—Ñ–ª–∞–π–Ω", "–æ—Ñ—Ñ", "–≤—à—ã—Å—â—Ç—Ç—É—Å–µ", "—â–∞–∞–¥—à—Ç—É", "—â–∞–∞", "—ã—Ä–≥–µ–≤—â—Ü—Ç"],
	# 	description="–û—Ç–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞.")
	# @commands.has_permissions(manage_guild=True)
	# async def shutdown(self, ctx):
	# 	with open("assets/pfps/offline.png", "rb") as file:
	# 		await self.bot.user.edit(avatar=file.read())
	# 	await ctx.reply("–û—Ç–∫–ª—é—á–∞—é—Å—å... üò¥", allowed_mentions=no_ping)
	# 	await self.bot.close()
	# @shutdown.error
	# async def off_error(self, ctx, error):
	# 	await handle_errors(ctx, error, [
	# 		{
	# 			"contains": "HTTPException",
	# 			"msg": f" {Emojis.mojo} –¢–∏—Ö–æ, —Ç–∏—Ö–æ, –Ω–µ –º–æ–≥—É —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ"
	# 		},
	# 		{
	# 			"exception": commands.MissingPermissions,
	# 			"msg": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤"
	# 		}
	# 	])


	@commands.hybrid_command(name="status", aliases=["—ã–µ—Ñ–µ–≥—ã", "—Å—Ç–∞—Ç—É—Å"],
		description="–ú–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞")
	@commands.has_permissions(manage_guild=True)
	async def change_status(self, ctx, status: Literal["–û–Ω–ª–∞–π–Ω", "–û—Ç–æ—à—ë–ª", "–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å", "–û—Ñ—Ñ–ª–∞–π–Ω"]):
		valid_statuses = {
			"online": ["on", "–æ–Ω–ª–∞–π–Ω", "–≤—Å–µ—Ç–∏", "–≤-—Å–µ—Ç–∏", "—â—Ç–¥—à—Ç—É", "—â—Ç"],
			"idle": ["afk", "–æ—Ç–æ—à—ë–ª", "–æ—Ç–æ–π–¥–∏", "–∞–π–¥–ª", "–∞—Ñ–∫", "—à–≤–¥—É", "—Ñ–∞–ª"],
			"dnd": ["dnd", "–Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å", "do-not-disturb", "–Ω–µ-–±–µ—Å–ø–æ–∫–æ–∏—Ç—å", "–¥–Ω–¥", "–≤—â—Ç—â–µ–≤—à—ã–µ–≥–∫–∏", "–≤—Ç–≤", "–≤—â-—Ç—â–µ-–≤—à—ã–µ–≥–∫–∏"],
			"offline": ["invis", "–Ω–µ–≤–∏–¥–∏–º–∫–∞", "inv", "–Ω–µ–≤–∏–¥–∏–º—ã–π", "–∏–Ω–≤–∏–∑–∏–±–ª", "–∏–Ω–≤–∏–∑", "–∏–Ω–≤", "—à—Ç–º—à—ã—à–∏–¥—É", "—à—Ç–º—à—ã", "—à—Ç–º"]
		}
		status = validate(status, valid_statuses)
		with open(f"assets/pfps/{status}.png", "rb") as file:
			await self.bot.user.edit(avatar=file.read())
		await self.bot.change_presence(status=discord.Status(value=status))
		await ctx.reply(f"{Emojis.check} –¢–µ–ø–µ—Ä—å –º–æ–π —Å—Ç–∞—Ç—É—Å - `{valid_statuses[status][1]}`.", allowed_mentions=no_ping)
	@change_status.error
	async def status_error(self, ctx, error):
		await handle_errors(ctx, error, [
			{
				"contains": "HTTPException",
				"msg": f" {Emojis.mojo} –¢–∏—Ö–æ, —Ç–∏—Ö–æ, –Ω–µ –º–æ–≥—É —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ"
			},
			{
				"exception": commands.MissingPermissions,
				"msg": f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤"
			},
			{
				"contains": "Could not convert",
				"msg": f"–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"
			}
		])
