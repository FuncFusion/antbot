import discord
from discord.ext import commands
from discord import app_commands

from settings import HELP_FORUM_ID

from re import findall

from utils.general import handle_errors
from utils.msg_utils import Emojis, get_msg_by_id_arg
from utils.shortcuts import no_color, no_ping


class R_u_sure(discord.ui.View):
	def __init__(self):
		super().__init__()
	@discord.ui.button(label="–î–∞", style=discord.ButtonStyle.red)
	async def submit(self, ctx: discord.Interaction, button: discord.ui.Button):
		is_moderator = ctx.channel.permissions_for(ctx.user).manage_messages
		if ctx.user != ctx.channel.owner and not is_moderator:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –ª–∏–±–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º", view=None, ephemeral=True, reference=ctx.message, allowed_mentions=no_ping)
		else:
			resolve_embed = discord.Embed(title=f"{Emojis.cross} –í–µ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∞ –±–µ–∑ —Ä–µ—à–µ–Ω–∏—è", color=no_color)
			await ctx.response.edit_message(embed=resolve_embed, view=None)
			await ctx.channel.edit(archived=True)
			self.stop()
	@discord.ui.button(label="–ù–µ—Ç", style=discord.ButtonStyle.gray)
	async def cancel(self, ctx: discord.Interaction, button: discord.ui.Button):
		is_moderator = ctx.channel.permissions_for(ctx.user).manage_messages
		if ctx.user != ctx.channel.owner and not is_moderator:
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –ª–∏–±–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º", view=None, ephemeral=True, reference=ctx.message, allowed_mentions=no_ping)
		else:
			await ctx.message.delete()
			await ctx.response.send_message(f"{Emojis.exclamation_mark} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤ `resolve` —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–≥–æ–ª–æ \
				–≤–∞–º —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∏ @—É–ø–æ–º—è–Ω–∏—Ç–µ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ –≤–∞–º –µ—ë —Ä–µ—à–∏—Ç—å".replace("\t", ""), view=None, ephemeral=True)
			self.stop()


class ResolveCommand(commands.Cog):

	@commands.hybrid_command(aliases=["solve", "—ã—â–¥–º—É", "–∫—É—ã—â–¥–º—É", "—Ä–µ—à–µ–Ω–æ", "—Ä–µ—Å–æ–ª–≤", "—Å–æ–ª–≤"],
		description="–ê—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –≤–µ—Ç–∫—É –ø–æ–º–æ—â–∏ –ø—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã") 
	@app_commands.describe(solution="–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–ª–æ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É (—Å—Å—ã–ª–∫–∞)",
		helpers="–õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É")

	async def resolve(self, ctx, solution: str=None, *, helpers: str="None"):
		heleprs_ids = [int(helepr_id) for helepr_id in findall(r"(?<=<@)([0-9]+)(?=>)", helpers)]
		helpers_mentions = findall(r"<@[0-9]+>", helpers)
		is_moderator = ctx.channel.permissions_for(ctx.author).manage_messages
		# Error handling
		if ctx.channel.parent_id != HELP_FORUM_ID:
			raise Exception("Channel is not help forum")
		elif ctx.author != ctx.channel.owner and not is_moderator:
			raise Exception("User not author/op")
		elif solution == None:
			# Building embed
			embed = discord.Embed(title="ü§® –ü–æ–≥–æ–¥–∏—Ç–µ, –≤—ã —É–≤–µ—Ä–µ–Ω—ã?", color=no_color,
				description=f"{Emojis.exclamation_mark} –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∏ –ª—é–¥–µ–π –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É, \
				—ç—Ç–æ –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä—É–µ—Ç –≤–µ—Ç–∫—É –±–µ–∑ —Ä–µ—à–µ–Ω–∏—è".replace("\t", ""))
			await ctx.send(embed=embed, view=R_u_sure())
		elif type((solution:=await get_msg_by_id_arg(self, ctx, self.bot, solution))) != discord.Message:
			raise Exception("Wrong message")
		elif helpers == "None" or "@" not in helpers:
			raise Exception("Missing arg")
		# Building embed
		embed = discord.Embed(title=f"{Emojis.check} –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞", color=no_color)
		embed.add_field(name="–†–µ—à–µ–Ω–∏–µ", value=f"{Emojis.link} {solution.jump_url}", inline=False)
		embed.add_field(name="–õ—é–¥–∏ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏" if len(helpers_mentions) >= 2 else "–ß–µ–ª–æ–≤–µ–∫ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥", 
			value=f"{Emojis.user if len(helpers_mentions) >= 2 else Emojis.users} {" ".join(helpers_mentions)}")
		await ctx.reply(embed=embed, allowed_mentions=no_ping)
		await ctx.channel.edit(archived=True)

	@resolve.error
	async def resolve_error(self, ctx, error):
		await handle_errors(ctx, error, [
			{
				"contains": "has no attribute 'parent_id'",
				"msg": f"{Emojis.exclamation_mark} –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≤–µ—Ç–∫–∞—Ö –ø–æ–º–æ—â–∏"
			},
			{
				"contains": "not help forum",
				"msg": f"{Emojis.exclamation_mark} –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≤–µ—Ç–∫–∞—Ö –ø–æ–º–æ—â–∏"
			},
			{
				"contains": "not author/op",
				"msg": f"{Emojis.exclamation_mark} –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≤–µ—Ç–∫–∏ –ª–∏–±–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º"
			},
			{
				"contains": "Wrong message",
				"msg": f"{Emojis.exclamation_mark} –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞/–∞–π–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"
			},
			{
				"contains": "Missing arg",
				"msg": f"{Emojis.exclamation_mark} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, @—É–ø–æ–º—è–Ω–∏—Ç–µ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ –≤–∞–º —Å –ø—Ä–æ–±–ª–µ–º–æ–π"
			}
		])
		